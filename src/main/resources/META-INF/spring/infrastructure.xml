<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    <!-- Enable @Configurable -->
    
    <context:spring-configured />
    
    <!-- Scan for and configure components -->
    
    <context:component-scan base-package="fi.jpalomaki.vaadinspring" />

    <!-- Setup a datasource for JDBC connectivity -->

    <bean
        id="dataSource"
        destroy-method="close"
        class="org.apache.commons.dbcp.BasicDataSource"
        p:driverClassName="${database.driverClassName}"
        p:username="${database.username}"
        p:password="${database.password}"
        p:url="${database.url}"
    />
    
    <!-- Tell Spring we're using Hibernate as the JPA vendor -->
    
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
    
    <!-- Setup a JPA EntityManagerFactory with the given datasource, JPA vendor and persistence.xml -->
    
    <bean
        id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:persistenceXmlLocation="${persistence.xml}"
        p:jpaVendorAdapter-ref="jpaVendorAdapter"
        p:dataSource-ref="dataSource"      
    />
    
    <!-- Setup a transaction manager that can work with JPA and plain JDBC code alike -->
    
    <bean
        id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory"
    />
    
    <!-- Enable @Transactional for declarative transaction management (via an aspect) -->
    
    <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager" />
    
</beans>
